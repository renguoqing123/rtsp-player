<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="INFO" monitorInterval="30">
	<!-- 定义配置文件 -->
	<properties>
		<property name="LOG_HOME">${sys:user.home}/logs</property>
		<property name="FILE_NAME">rtsp-player</property>
		<property name="LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS}  %-5level [%t] %-36c{1.} : %m%n</property>
		<property name="SOME_PACKAGE">com.rtsp.log</property><!-- 单独打印日志 -->
	</properties>
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="${LOG_PATTERN}" />
		</console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<File name="log" fileName="log/test.log" append="false">
			<PatternLayout pattern="${LOG_PATTERN}" />
		</File>
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingRandomAccessFile name="RollingFileInfo" fileName="${LOG_HOME}/${FILE_NAME}-info.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<!--控制台只输出level及以上级别的信息，匹配（onMatch），其他的直接拒绝，不匹配（onMismatch） -->
				<!-- onMatch=否认：DENY,接受：ACCEPT onMismatch=否认：DENY,接受：ACCEPT,中立：NEUTRAL-->
				<ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL" /><!-- 想输出info日志，禁止输出的warn日志必须放上面 -->
				<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
				<OnStartupTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		<RollingRandomAccessFile name="RollingFileWarn" fileName="${LOG_HOME}/${FILE_NAME}-warn.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL" /><!-- 想输出warn日志，禁止输出的error日志必须放上面 -->
				<ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
				<OnStartupTriggeringPolicy />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		<RollingRandomAccessFile name="RollingFileError" fileName="${LOG_HOME}/${FILE_NAME}-error.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<!-- <ThresholdFilter level="FATAL" onMatch="DENY" onMismatch="NEUTRAL" /> -->
				<ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
				<OnStartupTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		<RollingRandomAccessFile name="RollingFileDebug" fileName="${LOG_HOME}/${FILE_NAME}-debug.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL" />
				<ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
				<OnStartupTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		<RollingRandomAccessFile name="RollingFileTrace" fileName="${LOG_HOME}/${FILE_NAME}-trace.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/trace-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<ThresholdFilter level="DEBUG" onMatch="DENY" onMismatch="NEUTRAL" />
				<ThresholdFilter level="TRACE" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
				<OnStartupTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		
		<!-- 具体包下日志打印 -->
		<RollingRandomAccessFile name="RollingFileAll" fileName="${LOG_HOME}/${SOME_PACKAGE}-All.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/all-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<ThresholdFilter level="TRACE" onMatch="ACCEPT" onMismatch="DENY" />
			</Filters>
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
				<OnStartupTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<logger name="org.springframework" level="INFO"></logger>
		<logger name="org.mybatis" level="INFO"></logger>
		<!-- 指定包打印 -->
		<!-- name：可以是包或类或类方法 -->
		<!-- 不继承root Logger, additivity =false则不往root路径下的日志里边打印  -->
		<Logger name="com.rtsp.log" level="ALL" additivity="false">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileAll" />
		</Logger>
		<root level="ALL">
			<appender-ref ref="Console" /><!-- 控制台 -->
			<appender-ref ref="RollingFileInfo" />
			<appender-ref ref="RollingFileWarn" />
			<appender-ref ref="RollingFileError" />
			<appender-ref ref="RollingFileDebug" />
			<appender-ref ref="RollingFileTrace" />
			<appender-ref ref="RollingFileAll" />
		</root>
	</loggers>
</configuration>